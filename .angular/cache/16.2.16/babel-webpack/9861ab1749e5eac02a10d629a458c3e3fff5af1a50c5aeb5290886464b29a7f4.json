{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../composer.service\";\nexport let ComposerDetailsComponent = /*#__PURE__*/(() => {\n  class ComposerDetailsComponent {\n    // In the components constructor and using the ActivatedRoute object\n    constructor(route, composerService) {\n      // call the snapshot function to retrieve the composerId parameter\n      //value and assign it to the composerId variable.\n      this.route = route;\n      this.composerService = composerService;\n      // Parameter values will always return a string value, so you will\n      // need to use parseInt to parse the string into a numerical value\n      this.composerId = parseInt(this.route.snapshot.paramMap.get('composerId'), 10);\n      // Add an if statement to check the composerId value\n      if (this.composerId) {\n        this.composer = this.composerService.getComposer(this.composerId);\n      }\n    }\n    ngOnInit() {}\n    static {\n      this.ɵfac = function ComposerDetailsComponent_Factory(t) {\n        return new (t || ComposerDetailsComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.ComposerService));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: ComposerDetailsComponent,\n        selectors: [[\"app-composer-details\"]],\n        decls: 13,\n        vars: 3,\n        consts: [[1, \"col-8\", \"m-auto\"], [1, \"row\"], [1, \"col-sm-12\"], [1, \"list-group\"], [1, \"list-group-item\"], [\"routerLink\", \"/composer-list\", 1, \"float-end\"]],\n        template: function ComposerDetailsComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"ul\", 3)(4, \"li\", 4);\n            i0.ɵɵtext(5);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(6, \"li\", 4);\n            i0.ɵɵtext(7);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(8, \"li\", 4);\n            i0.ɵɵtext(9);\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelement(10, \"br\");\n            i0.ɵɵelementStart(11, \"a\", 5);\n            i0.ɵɵtext(12, \" Return to Composers \");\n            i0.ɵɵelementEnd()()()();\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance(5);\n            i0.ɵɵtextInterpolate1(\"Composer ID: \", ctx.composer.composerId, \"\");\n            i0.ɵɵadvance(2);\n            i0.ɵɵtextInterpolate1(\"Full name: \", ctx.composer.fullName, \"\");\n            i0.ɵɵadvance(2);\n            i0.ɵɵtextInterpolate1(\"Genre: \", ctx.composer.genre, \"\");\n          }\n        },\n        dependencies: [i1.RouterLink]\n      });\n    }\n  }\n  return ComposerDetailsComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}