{"ast":null,"code":"import { FormControl } from '@angular/forms';\nimport { debounceTime } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../composer.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/router\";\n\nfunction ComposerListComponent_tbody_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tbody\")(1, \"tr\")(2, \"td\", 7)(3, \"a\", 8);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(5, \"td\", 7);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\", 7);\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const composer_r1 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵpropertyInterpolate1(\"routerLink\", \"/composer-details/\", composer_r1.composerId, \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", composer_r1.composerId, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(composer_r1.fullName);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(composer_r1.genre);\n  }\n}\n\nexport let ComposerListComponent = /*#__PURE__*/(() => {\n  class ComposerListComponent {\n    // Add the ComposerService to the components constructor\n    constructor(composerService) {\n      this.composerService = composerService; // Add a variable named txtSearchControl and assign it a new instance\n      // of the FormControl object\n\n      this.txtSearchControl = new FormControl(''); // In the body of the components constructor, replace the getComposers() call\n      // from the Composer class with the composerService.getComposers() function\n\n      this.composers = this.composerService.getComposers(); // In the components constructor and underneath the getComposers() call\n      // add a subscribe() method that listens for valueChanges and calls\n      // the filterComposers() function.  Also, make sure you add a\n      // debounceTime of 500.\n\n      this.txtSearchControl.valueChanges.pipe(debounceTime(500)).subscribe(val => this.filterComposers(val));\n    }\n\n    ngOnInit() {} // Add a new function and name it filterComposers(name: string) and in\n    // the body of the function call the alert() function and pass-in\n    // the name parameter\n\n\n    filterComposers(name) {\n      // with a call to the composerService.filterComposers(name) function and\n      // assign the results to the composers variable\n      this.composers = this.composerService.filterComposers(name);\n    }\n\n  }\n\n  ComposerListComponent.ɵfac = function ComposerListComponent_Factory(t) {\n    return new (t || ComposerListComponent)(i0.ɵɵdirectiveInject(i1.ComposerService));\n  };\n\n  ComposerListComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ComposerListComponent,\n    selectors: [[\"app-composer-list\"]],\n    decls: 14,\n    vars: 4,\n    consts: [[1, \"col-8\", \"m-auto\"], [1, \"textSearch\"], [\"type\", \"text\", \"id\", \"txtsearch\", \"placeholder\", \"Search by name\", 1, \"form-control\", 3, \"formControl\"], [1, \"table\"], [1, \"table-dark\"], [\"scope\", \"col\"], [4, \"ngFor\", \"ngForOf\"], [\"scope\", \"row\"], [3, \"routerLink\"]],\n    template: function ComposerListComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n        i0.ɵɵelement(2, \"input\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"table\", 3)(4, \"thead\", 4)(5, \"tr\")(6, \"th\", 5);\n        i0.ɵɵtext(7, \"Composer ID\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"th\", 5);\n        i0.ɵɵtext(9, \"Composer\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"th\", 5);\n        i0.ɵɵtext(11, \"Genre\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵtemplate(12, ComposerListComponent_tbody_12_Template, 9, 4, \"tbody\", 6);\n        i0.ɵɵpipe(13, \"async\");\n        i0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"formControl\", ctx.txtSearchControl);\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(13, 2, ctx.composers));\n      }\n    },\n    directives: [i2.DefaultValueAccessor, i2.NgControlStatus, i2.FormControlDirective, i3.NgForOf, i4.RouterLinkWithHref],\n    pipes: [i3.AsyncPipe],\n    styles: [\".textSearch[_ngcontent-%COMP%]{width:30%;float:right;margin-bottom:5px}\"]\n  });\n  return ComposerListComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}